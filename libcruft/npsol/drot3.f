*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

      SUBROUTINE DROT3 ( N, X, INCX, Y, INCY, CS, SN )

      INTEGER            N, INCX, INCY
      DOUBLE PRECISION   CS, SN
      DOUBLE PRECISION   X(*), Y(*)

      DOUBLE PRECISION   WMACH
      COMMON    /SOLMCH/ WMACH(15)
      SAVE      /SOLMCH/

C
C  DROT3   applies the plane rotation defined by CS and SN to the
C  columns of a 2 by N matrix held in X and Y.  The method used requires
C  3 multiplications and 3 additions per column, as described in Gill,
C  Golub, Murray and Saunders, Mathematics of Computation 28 (1974) 505-
C  -535 (see page 508).
C
C  DROT3   guards against underflow, and overflow is extremely unlikely.
C  It is assumed that CS and SN have been generated by DROT3G, ensuring
C  that CS lies in the closed interval (0, 1),  and that the absolute
C  value of CS and SN (if nonzero) is no less than the machine precision
C  EPS.  It is also assumed that  RTMIN .lt. EPS.  Note that the magic
C  number Z is therefore no less than 0.5*EPS in absolute value, so it
C  is safe to use TOL = 2*RTMIN in the underflow test involving Z*A.
C  For efficiency we use the same TOL in the previous two tests.
C
C  Systems Optimization Laboratory, Stanford University.
C  Original version dated January 1982.
C  F77 version dated 28-June-1986.
C  This version of DROT3 dated 28-June-1986.
C
      INTEGER            I, IX, IY
      DOUBLE PRECISION   A, B, ONE, RTMIN, TOL, W, Z, ZERO
      INTRINSIC          ABS
      PARAMETER        ( ZERO = 0.0D+0, ONE = 1.0D+0 )

      IF (N .LT. 1  .OR.  SN .EQ. ZERO) RETURN
      IX = 1
      IY = 1
      IF (CS .EQ. ZERO) THEN

*        Just swap  x  and  y.

         DO 10 I = 1, N
            A     = X(IX)
            X(IX) = Y(IY)
            Y(IY) = A
            IX    = IX + INCX
            IY    = IY + INCY
   10    CONTINUE

      ELSE

         RTMIN  = WMACH(6)
         TOL    = RTMIN + RTMIN
         Z      = SN/(ONE + CS)

         DO 20 I = 1, N
            A     = X(IX)
            B     = Y(IY)
            W     = ZERO
            IF (ABS(A) .GT. TOL) W = CS*A
            IF (ABS(B) .GT. TOL) W = W + SN*B
            X(IX) = W
            A     = A + W
            IF (ABS(A) .GT. TOL) B = B - Z*A
            Y(IY) = - B
            IX    =   IX + INCX
            IY    =   IY + INCY
   20    CONTINUE

      END IF

      RETURN

*     End of  DROT3

      END
