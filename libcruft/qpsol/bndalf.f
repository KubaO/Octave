      SUBROUTINE BNDALF( FIRSTV, HITLOW, ISTATE, INFORM, JADD,
     *                   N, NROWA, NCLIN, NCLIN0, NCTOTL, NUMINF,
     *                   ALFA, PALFA, ATPHIT, BIGALF, BIGBND, PNORM,
     *                   ANORM, AP, AX, BL, BU, FEATOL, P, X )
C
C     IMPLICIT           REAL*8(A-H,O-Z)
      INTEGER            INFORM, JADD, N, NROWA, NCLIN, NCLIN0, NCTOTL,
     *                   NUMINF
      INTEGER            ISTATE(NCTOTL)
      DOUBLE PRECISION   ALFA, PALFA, ATPHIT, BIGALF, BIGBND, PNORM
      DOUBLE PRECISION   ANORM(NCLIN0), AP(NCLIN0), AX(NROWA),
     *                   BL(NCTOTL), BU(NCTOTL), FEATOL(NCTOTL),
     *                   P(N), X(N)
      LOGICAL            FIRSTV, HITLOW
C
      INTEGER            NOUT, MSG, ISTART
      DOUBLE PRECISION   PARM
      COMMON    /SOL1CM/ NOUT, MSG, ISTART
      COMMON    /SOL4CM/ PARM(10)
C
C  *********************************************************************
C  BNDALF  FINDS A STEP  ALFA  SUCH THAT THE POINT  X + ALFA*P  REACHES
C  ONE OF THE LINEAR CONSTRAINTS (INCLUDING BOUNDS).  TWO POSSIBLE STEPS
C  ARE DEFINED AS FOLLOWS...
C
C  ALFA1   IS THE MAXIMUM STEP THAT CAN BE TAKEN WITHOUT VIOLATING
C          ONE OF THE LINEAR CONSTRAINTS THAT IS CURRENTLY SATISFIED.
C  ALFA2   REACHES A LINEAR CONSTRAINT THAT IS CURRENTLY VIOLATED.
C          USUALLY THIS WILL BE THE FURTHEST SUCH CONSTRAINT ALONG  P,
C          BUT IF  FIRSTV = .TRUE.  IT WILL BE THE FIRST ONE ALONG  P.
C          THIS IS USED ONLY BY  LPCORE  WHEN THE PROBLEM HAS BEEN
C          DETERMINED TO BE INFEASIBLE, AND WE ARE NOW MINIMIZING THE
C          SUM OF INFEASIBILITIES.
C          (ALFA2  IS NOT DEFINED IF NUMINF = 0.)
C
C  ALFA  WILL USUALLY BE THE MINIMUM OF  ALFA1  AND  ALFA2.
C  ALFA  COULD BE NEGATIVE (SINCE WE ALLOW INACTIVE CONSTRAINTS
C  TO BE VIOLATED BY AS MUCH AS  FEATOL).  IN SUCH CASES, A
C  THIRD POSSIBLE STEP IS COMPUTED, TO FIND THE NEAREST SATISFIED
C  CONSTRAINT (PERTURBED BY  FEATOL) ALONG THE DIRECTION  - P.
C  ALFA  WILL BE RESET TO THIS STEP IF IT IS SHORTER.  THIS IS THE
C  ONLY CASE FOR WHICH THE FINAL STEP  ALFA  DOES NOT MOVE  X  EXACTLY
C  ONTO A CONSTRAINT (THE ONE DENOTED BY  JADD).
C
C  CONSTRAINTS IN THE WORKING SET ARE IGNORED  (ISTATE(J) GE 1).
C
C  JADD    DENOTES WHICH LINEAR CONSTRAINT IS REACHED.
C
C  HITLOW  INDICATES WHETHER IT IS THE LOWER OR UPPER BOUND THAT
C          HAS RESTRICTED  ALFA.
C
C  VALUES OF ISTATE(J)....
C
C     - 2         - 1         0           1          2         3
C  A*X LT BL   A*X GT BU   A*X FREE   A*X = BL   A*X = BU   BL = BU
C
C  THE VALUES -2 AND -1 DO NOT OCCUR ONCE LPCORE FINDS A FEASIBLE POINT.
C
C  SYSTEMS OPTIMIZATION LABORATORY, STANFORD UNIVERSITY.
C  VERSION OF MAY 1982.  REV. OCT. 1982.  FEB. 1984. JUNE 1986.
C  *********************************************************************
C
      INTEGER            I, IADD, J, JS, JSAVE1, JSAVE2, JADD1, JADD2
      DOUBLE PRECISION   ABSATP, ALFA1, ALFA2, APMAX1, APMAX2, ATP,
     *                   ATP1, ATP2, ATX, EPSPT9, PALFA1, PALFA2, RES,
     *                   ROWNRM
      DOUBLE PRECISION   ZERO, ONE
      DOUBLE PRECISION   DABS, DMIN1
      LOGICAL            HLOW1, HLOW2, LASTV, NEGSTP, NOLOW, NOUPP,
     *                   STEP2
      DATA               ZERO, ONE /0.0D+0, 1.0D+0/
C
      EPSPT9 = PARM(4)
C
      INFORM = 0
C
C  ---------------------------------------------------------------------
C  FIRST PASS -- FIND STEPS TO PERTURBED CONSTRAINTS, SO THAT
C  PALFA1  WILL BE SLIGHTLY LARGER THAN THE TRUE STEP, AND
C  PALFA2  WILL BE SLIGHTLY SMALLER THAN IT SHOULD BE.  IN DEGENERATE
C  CASES, THIS STRATEGY GIVES US SOME FREEDOM IN THE SECOND PASS.
C  THE GENERAL IDEA FOLLOWS THAT DESCRIBED BY P.M.J. HARRIS, P.21 OF
C  MATHEMATICAL PROGRAMMING 5, 1 (1973), 1--28.
C  ---------------------------------------------------------------------
C
      NEGSTP = .FALSE.
      CALL BDPERT( FIRSTV, NEGSTP, BIGALF, BIGBND, PNORM,
     *             JADD1, JADD2, PALFA1, PALFA2,
     *             ISTATE, N, NCLIN0, NROWA, NCTOTL,
     *             ANORM, AP, AX, BL, BU, FEATOL, P, X )
C
      JSAVE1 = JADD1
      JSAVE2 = JADD2
C
C  ---------------------------------------------------------------------
C  SECOND PASS -- RECOMPUTE STEP-LENGTHS WITHOUT PERTURBATION.
C  AMONGST CONSTRAINTS THAT ARE CLOSE TO THE PERTURBED STEPS,
C  CHOOSE THE ONE (OF EACH TYPE) THAT MAKES THE LARGEST ANGLE
C  WITH THE SEARCH DIRECTION.
C  ---------------------------------------------------------------------
      IF (MSG .EQ. 99) WRITE (NOUT, 1000)
      ALFA1  = BIGALF
      ALFA2  = ZERO
      IF (FIRSTV) ALFA2 = BIGALF
C
      APMAX1 = ZERO
      APMAX2 = ZERO
      ATP1   = ZERO
      ATP2   = ZERO
      HLOW1  = .FALSE.
      HLOW2  = .FALSE.
      LASTV  = .NOT. FIRSTV
C
      DO 400 J  = 1, NCTOTL
         JS     = ISTATE(J)
         IF (JS .GT. 0) GO TO 400
         IF (J  .GT. N) GO TO 320
C
C        BOUND CONSTRAINT.
C
         ATX    = X(J)
         ATP    = P(J)
         ROWNRM = ONE
         GO TO 330
C
C        GENERAL LINEAR CONSTRAINT.
C
  320    I      = J - N
         ATX    = AX(I)
         ATP    = AP(I)
         ROWNRM = ANORM(I) + ONE
C
  330    IF (DABS(ATP) .GT. EPSPT9*ROWNRM*PNORM) GO TO 335
         RES    = - ONE
         GO TO 390
C
  335    IF (ATP .GT. ZERO) GO TO 350
C
C        ATX IS DECREASING.
C        TEST FOR SMALLER ALFA1 IF LOWER BOUND IS SATISFIED.
C
         IF (JS .EQ. (- 2)) GO TO 390
         ABSATP = - ATP
         NOLOW  = BL(J) .LE. (- BIGBND)
         IF (NOLOW) GO TO 340
         RES    = ATX - BL(J)
         IF (PALFA1*ABSATP .LT. RES  .AND.  J .NE. JSAVE1) GO TO 340
         IF (APMAX1*ROWNRM*PNORM              .GE. ABSATP) GO TO 340
         APMAX1 = ABSATP/(ROWNRM*PNORM)
         ALFA1  = RES/ABSATP
         JADD1  = J
         ATP1   = ATP
         HLOW1  = .TRUE.
C
C        TEST FOR BIGGER ALFA2 IF UPPER BOUND IS VIOLATED.
C
  340    IF (JS .NE. (- 1)) GO TO 390
         RES    = ATX - BU(J)
         IF (LASTV  .AND.  PALFA2*ABSATP .GT. RES  .AND.  J .NE. JSAVE2)
     *      GO TO 390
         IF (FIRSTV .AND.  PALFA2*ABSATP .LT. RES  .AND.  J .NE. JSAVE2)
     *      GO TO 390
         IF (APMAX2*ROWNRM*PNORM   .GE.   ABSATP) GO TO 390
         APMAX2 = ABSATP/(ROWNRM*PNORM)
         ALFA2  = BIGALF
         IF (ABSATP .LT. ONE) GO TO 342
         ALFA2  = RES/ABSATP
         GO TO 345
  342    IF (RES .LT. BIGALF*ABSATP) ALFA2 = RES/ABSATP
C
  345    JADD2  = J
         ATP2   = ATP
         HLOW2  = .FALSE.
         GO TO 390
C
C        ATX IS INCREASING.
C        TEST FOR SMALLER ALFA1 IF UPPER BOUND IS SATISFIED.
C
  350    IF (JS .EQ. (- 1)) GO TO 390
         NOUPP  = BU(J) .GE.   BIGBND
         IF (NOUPP) GO TO 360
         RES    = BU(J) - ATX
         IF (PALFA1*ATP .LT. RES  .AND.  J .NE. JSAVE1) GO TO 360
         IF (APMAX1*ROWNRM*PNORM           .GE. ATP   ) GO TO 360
         APMAX1 = ATP/(ROWNRM*PNORM)
         ALFA1  = RES/ATP
         JADD1  = J
         ATP1   = ATP
         HLOW1  = .FALSE.
C
C        TEST FOR BIGGER ALFA2 IF LOWER BOUND IS VIOLATED.
C
  360    IF (JS .NE. (- 2)) GO TO 390
         RES    = BL(J) - ATX
         IF (LASTV   .AND.  PALFA2*ATP .GT. RES  .AND.  J .NE. JSAVE2)
     *      GO TO 390
         IF (FIRSTV  .AND.  PALFA2*ATP .LT. RES  .AND.  J .NE. JSAVE2)
     *      GO TO 390
         IF (APMAX2*ROWNRM*PNORM    .GE.  ATP) GO TO 390
         APMAX2 = ATP/(ROWNRM*PNORM)
         ALFA2  = BIGALF
         IF (ATP .LT. ONE) GO TO 363
         ALFA2  = RES/ATP
         GO TO 365
  363    IF (RES .LT. BIGALF*ATP) ALFA2 = RES/ATP
C
  365    JADD2  = J
         ATP2   = ATP
         HLOW2  = .TRUE.
C
  390    IF (MSG .EQ. 99) WRITE (NOUT, 1200) J, JS, FEATOL(J), ATX,
     *      ATP, JADD1, ALFA1, JADD2, ALFA2
  400 CONTINUE
C
C  ---------------------------------------------------------------------
C  IF FEASIBLE, ONLY ALFA1 WILL HAVE BEEN SET.
C  ---------------------------------------------------------------------
      ALFA   = ALFA1
      PALFA  = PALFA1
      JADD   = JADD1
      ATPHIT = ATP1
      HITLOW = HLOW1
      IF (NUMINF .EQ. 0) GO TO 500
      IF (JADD2  .EQ. 0) GO TO 500
C
C  INFEASIBLE -- SEE IF WE STEP TO THE FURTHEST VIOLATED CONSTRAINT.
C  BE PREPARED TO STEP IN THE RANGE  (ALFA1, PALFA1)  IF THE VIOLATED
C  CONSTRAINT HAS A LARGER VALUE OF  AP.
C
      STEP2  =  ALFA2 .LT. ALFA1   .OR.
     *         (ALFA2 .LE. PALFA1  .AND.  APMAX2 .GE. APMAX1)
      IF (.NOT. STEP2) GO TO 500
      ALFA   = ALFA2
      JADD   = JADD2
      ATPHIT = ATP2
      HITLOW = HLOW2
      GO TO 900
C
C  TEST FOR NEGATIVE STEP.
C  JADD  WILL RETAIN ITS CURRENT VALUE, BUT WE MAY SHORTEN  ALFA
C  TO BE  - PALFA1,  THE STEP TO THE NEAREST PERTURBED SATISFIED
C  CONSTRAINT ALONG THE DIRECTION  - P.
C
  500 NEGSTP = ALFA .LT. ZERO
      IF (.NOT. NEGSTP) GO TO 900
C
      CALL BDPERT( FIRSTV, NEGSTP, BIGALF, BIGBND, PNORM,
     *             JADD1, JADD2, PALFA1, PALFA2,
     *             ISTATE, N, NCLIN0, NROWA, NCTOTL,
     *             ANORM, AP, AX, BL, BU, FEATOL, P, X )
C
      IF (MSG .GE. 80) WRITE (NOUT, 9000) ALFA, PALFA1
      ALFA = - DMIN1( DABS(ALFA), PALFA1 )
C
C  TEST FOR UNDEFINED OR INFINITE STEP.  THIS SHOULD MEAN THAT THE
C  SOLUTION IS UNBOUNDED.
C
  900 IF (JADD .EQ. 0)      ALFA   = BIGALF
      IF (JADD .EQ. 0)      PALFA  = BIGALF
      IF (JADD .EQ. 0)      INFORM = 2
      IF (ALFA .GE. BIGALF) INFORM = 3
      IF (MSG .GE. 80  .AND.  INFORM .GT. 0)
     *WRITE (NOUT, 9010) JADD, ALFA
      RETURN
C
 1000 FORMAT(/ 15H BNDALF ENTERED
     *       / 50H    J  JS         FEATOL         AX             AP,
     *         46H     JADD1        ALFA1     JADD2        ALFA2 /)
 1200 FORMAT(I5, I4, 3G15.5, 2(I6, G17.7))
 9000 FORMAT(/ 27H //BNDALF//  NEGATIVE STEP.
     *       / 41H //BNDALF//           ALFA          PALFA
     *       / 11H //BNDALF//, 2G15.4 )
 9010 FORMAT(/ 28H //BNDALF//  UNBOUNDED STEP.
     *       / 32H //BNDALF//  JADD           ALFA
     *       / 13H //BNDALF//  , I4, G15.4 )
C
C  END OF BNDALF
      END
