      SUBROUTINE ROT3  ( N, X, LENX, INCX, Y, LENY, INCY, CS, SN )
C
      INTEGER            N, LENX, INCX, LENY, INCY
      DOUBLE PRECISION   CS, SN
      DOUBLE PRECISION   X(LENX), Y(LENY)
C
      DOUBLE PRECISION   WMACH
      COMMON    /SOLMCH/ WMACH(15)
C
C  *********************************************************************
C  ROT3  APPLIES THE PLANE ROTATION DEFINED BY  CS  AND  SN
C  TO THE COLUMNS OF A  2 BY N  MATRIX HELD IN  X  AND  Y.
C  THE METHOD USED REQUIRES 3 MULTIPLICATIONS AND 3 ADDITIONS
C  PER COLUMN, AS DESCRIBED IN GILL, GOLUB, MURRAY AND SAUNDERS,
C  MATHEMATICS OF COMPUTATION 28 (1974) 505--535 (SEE PAGE 508).
C
C  ROT3  GUARDS AGAINST UNDERFLOW, AND OVERFLOW IS EXTREMELY UNLIKELY.
C  IT IS ASSUMED THAT  CS  AND  SN  HAVE BEEN GENERATED BY  ROTGEN,
C  ENSURING THAT  CS  LIES IN THE CLOSED INTERVAL  (0, 1),  AND THAT
C  THE ABSOLUTE VALUE OF  CS  AND  SN  (IF NONZERO) IS NO LESS THAN THE
C  MACHINE PRECISION,  EPS.  IT IS ALSO ASSUMED THAT  RTMIN .LT. EPS.
C  NOTE THAT THE MAGIC NUMBER  Z  IS THEREFORE NO LESS THAN  0.5*EPS
C  IN ABSOLUTE VALUE, SO IT IS SAFE TO USE  TOL = 2*RTMIN IN THE
C  UNDERFLOW TEST INVOLVING  Z*A.  FOR EFFICIENCY WE USE THE SAME TOL
C  IN THE PREVIOUS TWO TESTS.
C
C  SYSTEMS OPTIMIZATION LABORATORY, STANFORD UNIVERSITY.
C  VERSION OF JANUARY 1982.
C  *********************************************************************
C
      INTEGER            I, IX, IY
      DOUBLE PRECISION   A, B, ONE, RTMIN, TOL, W, Z, ZERO
      DOUBLE PRECISION   DABS
      DATA               ONE/1.0D+0/, ZERO/0.0D+0/
C
      IF (N .LT. 1  .OR.  SN .EQ. ZERO) RETURN
      IX = 1
      IY = 1
      IF (CS .EQ. ZERO) GO TO 100
      RTMIN  = WMACH(6)
      TOL    = RTMIN + RTMIN
      Z      = SN/(ONE + CS)
C
      DO 10 I = 1, N
         A     = X(IX)
         B     = Y(IY)
         W     = ZERO
         IF (DABS(A) .GT. TOL) W = CS*A
         IF (DABS(B) .GT. TOL) W = W + SN*B
         X(IX) = W
         A     = A + W
         IF (DABS(A) .GT. TOL) B = B - Z*A
         Y(IY) = - B
         IX    = IX + INCX
         IY    = IY + INCY
   10 CONTINUE
      RETURN
C
C  JUST SWAP  X  AND  Y.
C
  100 DO 110 I = 1, N
         A     = X(IX)
         X(IX) = Y(IY)
         Y(IY) = A
         IX    = IX + INCX
         IY    = IY + INCY
  110 CONTINUE
      RETURN
C
C  END OF ROT3
      END
