      SUBROUTINE LPCRSH( ORTHOG, UNITQ, VERTEX, LCRASH, N, NCLIN,NCLIN0,
     *                   NCTOTL, NQ, NROWA, NROWRT, NCOLRT, NACTIV,
     *                   NCOLZ, NFREE, ISTATE, KACTIV, KFREE,
     *                   BIGBND, TOLACT, XNORM,
     *                   A, ANORM, AX, BL, BU, X,
     *                   QTG, RT, ZY, P, WRK1, WRK2 )
C
C     IMPLICIT           REAL*8(A-H,O-Z)
      INTEGER            LCRASH, N, NCLIN, NCLIN0, NCTOTL, NQ, NROWA,
     *                   NROWRT, NCOLRT, NACTIV, NCOLZ, NFREE
      INTEGER            ISTATE(NCTOTL), KACTIV(N), KFREE(N)
      DOUBLE PRECISION   ASIZE, DTMAX, DTMIN, BIGBND, TOLACT, XNORM
      DOUBLE PRECISION   A(NROWA,N), ANORM(NCLIN0), AX(NROWA),
     *                   BL(NCTOTL), BU(NCTOTL), QTG(N),
     *                   RT(NROWRT,NCOLRT), ZY(NQ,NQ), P(N), X(N)
      DOUBLE PRECISION   WRK1(N), WRK2(N)
      LOGICAL            ORTHOG, UNITQ, VERTEX
C
      INTEGER            NOUT, MSG, ISTART
      DOUBLE PRECISION   WMACH
      COMMON    /SOLMCH/ WMACH(15)
      COMMON    /SOL1CM/ NOUT, MSG, ISTART
      COMMON    /SOL5CM/ ASIZE, DTMAX, DTMIN
C
C  *********************************************************************
C  LPCRSH  COMPUTES DETAILS ASSOCIATED WITH THE WORKING SET AT A POINT
C  X.  THE COMPUTATION DEPENDS UPON THE VALUE OF THE INPUT PARAMETER
C  LCRASH.   AS  FOLLOWS ...
C
C  LCRASH = 0  MEANS THAT  LPCRSH  SHOULD FIND (1) AN INITIAL WORKING
C              SET, (2) THE  TQ  FACTORS OF THE CONSTRAINT COEFFICIENTS
C              FOR THE WORKING SET, AND (3) THE POINT CLOSEST TO  X
C              THAT LIES ON THE WORKING SET.
C  LCRASH = 1  MEANS THAT  LPCRSH  SHOULD COMPUTE (1) THE  TQ  FACTORS
C              OF A WORKING SET SPECIFIED BY THE INTEGER ARRAY  ISTATE,
C              AND (2) THE POINT CLOSEST TO  X  THAT SATISFIES THE
C              WORKING SET.
C  LCRASH = 2  MEANS THAT  LPCRSH  ESSENTIALLY DOES NOTHING BUT COMPUTE
C              AUXILIARY INFORMATION ABOUT THE POINT  X  THAT LIES ON
C              THE CONSTRAINTS IN THE GIVEN WORKING SET.
C
C  VALUES OF ISTATE(J)....
C
C     - 2         - 1         0           1          2         3
C  A*X LT BL   A*X GT BU   A*X FREE   A*X = BL   A*X = BU   BL = BU
C
C     ISTATE(J) = 4  MEANS THAT X(J) IS ON A TEMPORARY BOUND.
C
C  SYSTEMS OPTIMIZATION LABORATORY, STANFORD UNIVERSITY.
C  VERSION OF JANUARY 1982.  REV. NOV. 1982.  APR. 1984.
C  *********************************************************************
C
      INTEGER            I, IADD, IDUMMY, IFIX, IMIN, INFORM, IS, J,
     *                   JADD, JMIN, K, KB, LENQ, LROWA, NACT1, NARTIF,
     *                   NCOLZ1, NFIXED
      DOUBLE PRECISION   AMIN, BND, B1, B2, COLMIN, COLSIZ, CONDMX,
     *                   CSLAST, FLMAX, RES, RESL, RESMIN, RESU, RNORM,
     *                   ROWMAX, RTEPS, SNLAST, TOOBIG
      DOUBLE PRECISION   ZERO, ONE
      DOUBLE PRECISION   DOT, V2NORM
      DOUBLE PRECISION   DABS, DMIN1
      LOGICAL            NOLOW, NOUPP
      DATA               ZERO  , ONE
     *                  /0.0D+0, 1.0D+0/
C
      RTEPS  = WMACH(4)
      FLMAX  = WMACH(7)
C
      LROWA  = NROWA*(N - 1) + 1
C
C  SET THE MAXIMUM ALLOWABLE CONDITION ESTIMATOR OF THE CONSTRAINTS
C  IN THE WORKING SET.  NOTE THAT THE CONSERVATIVE VALUE USED IN  LPCRSH
C  IS SMALLER THAN THAT USED WHEN A CONSTRAINT IS ADDED TO THE WORKING
C  SET DURING A TYPICAL ITERATION.
C
      CONDMX = ONE/RTEPS
C
      IF (MSG .GE. 80) WRITE (NOUT, 1210) LCRASH, NCLIN, NCTOTL
      IF (MSG .GE. 80) WRITE (NOUT, 1010) (X(J), J = 1, N)
      NFIXED = 0
      NACTIV = 0
      NARTIF = 0
C
C  IF A COLD START IS BEING MADE, INITIALIZE  ISTATE.
C  IF  BL(J) = BU(J),  SET  ISTATE(J)=3  FOR ALL VARIABLES AND LINEAR
C  CONSTRAINTS.
C
      IF (LCRASH .GT. 0) GO TO 140
      DO  130 J = 1, NCTOTL
         ISTATE(J) = 0
         IF (BL(J) .EQ. BU(J)) ISTATE(J) = 3
  130 CONTINUE
C
C  INITIALIZE  NFIXED,  NACTIV  AND  KACTIV.
C  ENSURE THAT THE NUMBER OF BOUNDS AND GENERAL CONSTRAINTS IN THE
C  WORKING SET DOES NOT EXCEED  N.
C
  140 DO 200 J = 1, NCTOTL
         IF (NFIXED + NACTIV .EQ. N) ISTATE(J) = 0
         IF (ISTATE(J) .LE. 0) GO TO 200
         IF (J .GT. N) GO TO 160
         NFIXED = NFIXED + 1
         IF (ISTATE(J) .EQ. 1) X(J) = BL(J)
         IF (ISTATE(J) .GE. 2) X(J) = BU(J)
         GO TO 200
  160    NACTIV = NACTIV + 1
         IF (LCRASH .LT. 2) KACTIV(NACTIV) = J - N
  200 CONTINUE
C
      NFREE  = N      - NFIXED
      NCOLZ  = NFREE  - NACTIV
C
C  IF A HOT START IS REQUIRED, THE  TQ  FACTORIZATION IS ALREADY KNOWN.
C
      IF (LCRASH .GT. 1) GO TO 700
      DTMAX  = ONE
      DTMIN  = ONE
      UNITQ  = .TRUE.
C
C  COMPUTE THE 2-NORMS OF THE CONSTRAINT ROWS.
C
      ASIZE  = ONE
      IF (NCLIN .EQ. 0) GO TO 215
      DO 210 J = 1, NCLIN
         ANORM(J) = V2NORM( N, A(J,1), LROWA, NROWA )
  210 CONTINUE
      CALL CONDVC( NCLIN, ANORM, NCLIN, 1, ASIZE, AMIN )
C
  215 IF (LCRASH .GT. 0) GO TO 400
C
C  ---------------------------------------------------------------------
C  IF A COLD START IS REQUIRED, AN ATTEMPT IS MADE TO ADD AS MANY
C  CONSTRAINTS AS POSSIBLE TO THE WORKING SET.
C  ---------------------------------------------------------------------
      IF (NFIXED + NACTIV .EQ. N) GO TO 500
C
C  SEE IF ANY VARIABLES ARE OUTSIDE THEIR BOUNDS.
C
      DO 250 J = 1, N
         IF (ISTATE(J) .NE. 0) GO TO 250
         B1     = BL(J)
         B2     = BU(J)
         NOLOW  = B1 .LE. (- BIGBND)
         NOUPP  = B2 .GE.    BIGBND
         IS     = 0
         IF (NOLOW) GO TO 220
         IF (X(J) - B1 .LE. (ONE + DABS( B1 ))*TOLACT) IS = 1
  220    IF (NOUPP) GO TO 240
         IF (B2 - X(J) .LE. (ONE + DABS( B2 ))*TOLACT) IS = 2
  240    IF (IS .EQ. 0) GO TO 250
C
C        SET VARIABLE EQUAL TO ITS BOUND.
C
         ISTATE(J) = IS
         IF (IS .EQ. 1) X(J) = B1
         IF (IS .EQ. 2) X(J) = B2
         NFIXED = NFIXED + 1
         IF (NFIXED + NACTIV .EQ. N) GO TO 500
  250 CONTINUE
C
C  ---------------------------------------------------------------------
C  THE FOLLOWING LOOP FINDS THE LINEAR CONSTRAINT THAT IS CLOSEST
C  TO BEING SATISFIED.  IF IT IS SUFFICIENTLY CLOSE, IT WILL BE ADDED
C  TO THE WORKING SET AND THE PROCESS WILL BE REPEATED.
C  ---------------------------------------------------------------------
C  FIRST, COMPUTE  AX  FOR INEQUALITY LINEAR CONSTRAINTS.
C
      IF (NCLIN .EQ. 0) GO TO 400
      DO 280 I = 1, NCLIN
         J     = N + I
         IF (ISTATE(J) .GT. 0) GO TO 280
         AX(I) = DOT(N, A(I,1), LROWA, NROWA, X, N, 1 )
  280 CONTINUE
C
         TOOBIG = TOLACT + TOLACT
C
      DO 350 IDUMMY = 1, N
         RESMIN = TOOBIG
         IS     = 0
C
         DO 340 I = 1, NCLIN
            J      = N + I
            IF (ISTATE(J) .GT. 0) GO TO 340
            B1     = BL(J)
            B2     = BU(J)
            NOLOW  = B1 .LE. (- BIGBND)
            NOUPP  = B2 .GE.    BIGBND
            RESL   = TOOBIG
            RESU   = TOOBIG
            IF (NOLOW) GO TO 320
            RESL   = DABS( AX(I) - B1 ) / (ONE + DABS( B1 ))
  320       IF (NOUPP) GO TO 330
            RESU   = DABS( AX(I) - B2 ) / (ONE + DABS( B2 ))
  330       RES    = DMIN1( RESL, RESU )
            IF (RES .GE. TOLACT) GO TO 340
            IF (RES .GE. RESMIN) GO TO 340
            RESMIN = RES
            IMIN   = I
            IS     = 1
            IF (RESL .GT. RESU) IS = 2
  340    CONTINUE
C
         IF (IS .EQ. 0) GO TO 400
         NACTIV = NACTIV + 1
         KACTIV(NACTIV) = IMIN
         J         = N + IMIN
         ISTATE(J) = IS
         IF (NFIXED + NACTIV .EQ. N) GO TO 500
  350 CONTINUE
C
C  ---------------------------------------------------------------------
C  IF NECESSARY, ADD TEMPORARY BOUNDS TO MAKE A VERTEX.
C  ---------------------------------------------------------------------
  400 NCOLZ = N - NFIXED - NACTIV
      IF (.NOT. VERTEX  .OR.  NCOLZ .EQ. 0) GO TO 500
C
C  COMPUTE LENGTHS OF COLUMNS OF SELECTED LINEAR CONSTRAINTS
C  (JUST THE ONES CORRESPONDING TO FREE VARIABLES).
C
      DO 440 J = 1, N
         IF (ISTATE(J) .NE. 0) GO TO 440
         COLSIZ = ZERO
         IF (NCLIN .EQ. 0) GO TO 430
         DO 420 K = 1, NCLIN
            I = N + K
            IF (ISTATE(I) .GT. 0) COLSIZ = COLSIZ + DABS( A(K,J) )
  420    CONTINUE
  430    WRK1(J) = COLSIZ
  440 CONTINUE
C
C  FIND THE  NARTIF  SMALLEST SUCH COLUMNS.
C  THIS IS AN EXPENSIVE LOOP.  LATER WE CAN REPLACE IT
C  BY A 4-PASS PROCESS (SAY), ACCEPTING THE FIRST COL THAT
C  IS WITHIN  T  OF  COLMIN, WHERE  T = 0.0, 0.001, 0.01, 0.1 (SAY).
C
      DO 480 IDUMMY = 1, NCOLZ
         COLMIN = FLMAX
         DO 470 J = 1, N
            IF (ISTATE(J) .NE. 0) GO TO 470
            IF (NCLIN .EQ. 0) GO TO 475
            COLSIZ = WRK1(J)
            IF (COLMIN .LE. COLSIZ) GO TO 470
            COLMIN = COLSIZ
            JMIN   = J
  470    CONTINUE
         J = JMIN
  475    ISTATE(J) = 4
         NARTIF = NARTIF + 1
  480 CONTINUE
C
C  ---------------------------------------------------------------------
C  A TRIAL WORKING SET HAS NOW BEEN SELECTED.
C  ---------------------------------------------------------------------
C  SET  KFREE  TO POINT TO THE FREE VARIABLES.
C
  500 NFREE = 0
      DO 520 J = 1, N
         IF (ISTATE(J) .NE. 0) GO TO 520
         NFREE = NFREE + 1
         KFREE(NFREE) = J
  520 CONTINUE
C
C  COMPUTE THE TQ FACTORIZATION FOR THE SELECTED LINEAR CONSTRAINTS.
C  FIRST, THE COLUMNS CORRESPONDING TO SIMPLE BOUNDS IN THE WORKING SET
C  ARE REMOVED. THE RESULTING  NACTIV BY NFREE  MATRIX (NACTIV LE NFREE)
C  IS FACTORIZED BY ADDING THE CONSTRAINTS ONE AT A TIME AND UPDATING
C  USING PLANE ROTATIONS OR STABILIZED ELIMINATIONS. THE  NACTIV BY
C  NACTIV  TRIANGULAR MATRIX  T  AND THE NFREE BY NFREE MATRIX  Q
C  ARE STORED IN THE ARRAYS  RT  AND  ZY.
C
      NCOLZ = NFREE
      IF (NACTIV .EQ. 0) GO TO 550
      NACT1  = NACTIV
      NACTIV = 0
      CALL TQADD ( ORTHOG, UNITQ,
     *             INFORM, 1, NACT1, NACTIV, NCOLZ, NFREE,
     *             N, NCTOTL, NQ, NROWA, NROWRT, NCOLRT,
     *             ISTATE, KACTIV, KFREE,
     *             CONDMX,
     *             A, QTG, RT, ZY, WRK1, WRK2 )
C
C  IF A VERTEX IS REQUIRED BUT  TQADD  WAS UNABLE TO ADD ALL OF THE
C  SELECTED GENERAL CONSTRAINTS, ADD MORE TEMPORARY BOUNDS.
C
      IF (.NOT. VERTEX  .OR.  NCOLZ .EQ. 0) GO TO 550
      LENQ   = NQ*(NQ - 1) + 1
      NCOLZ1 = NCOLZ
      DO 540 IDUMMY = 1, NCOLZ1
         ROWMAX = ZERO
         DO 530 I = 1, NFREE
            RNORM = V2NORM( NCOLZ, ZY(I,1), LENQ, NQ )
            IF (ROWMAX .GE. RNORM) GO TO 530
            ROWMAX = RNORM
            IFIX   = I
  530    CONTINUE
         JADD = KFREE(IFIX)
         CALL ADDCON( .FALSE., .FALSE., ORTHOG, UNITQ, INFORM,
     *                IFIX, IADD, JADD, NACTIV, NCOLZ, NCOLZ, NFREE,
     *                N, NQ, NROWA, NROWRT, NCOLRT, KFREE,
     *                CONDMX, CSLAST, SNLAST,
     *                A, QTG, RT, ZY, WRK1, WRK2 )
C
         NFREE  = NFREE  - 1
         NCOLZ  = NCOLZ  - 1
         NARTIF = NARTIF + 1
         ISTATE(JADD) = 4
  540 CONTINUE
C
C  SET ELEMENTS  NACTIV + 1, ......, NACTIV + NFIXED  OF  KACTIV TO
C  POINT TO THE FIXED VARIABLES.
C
  550 KB = NACTIV
      DO 560 J = 1, N
         IF (ISTATE(J) .EQ. 0) GO TO 560
         KB         = KB + 1
         KACTIV(KB) = J
  560 CONTINUE
C
C  ---------------------------------------------------------------------
C  THE TQ FACTORIZATION HAS BEEN COMPUTED.  FIND THE POINT CLOSEST TO
C  THE USER-SUPPLIED  X  THAT LIES ON THE INITIAL WORKING SET.
C  ---------------------------------------------------------------------
C  SET WRK1 = RESIDUALS FOR CONSTRAINTS IN THE WORKING SET.
C
      IF (NACTIV .EQ. 0) GO TO 700
      DO 610 I = 1, NACTIV
         K   = KACTIV(I)
         J   = N + K
         BND = BL(J)
         IF (ISTATE(J) .GT. 1) BND = BU(J)
         WRK1(I) = BND - DOT( N, A(K,1), LROWA, NROWA, X, N, 1 )
  610 CONTINUE
C
C  SOLVE FOR P, THE SMALLEST CORRECTION TO X THAT GIVES A POINT
C  ON THE CONSTRAINTS IN THE WORKING SET.
C  FIRST SOLVE  T*WRK1 = RESIDUALS, THEN GET  P = Y*WRK1.
C
      CALL TSOLVE( 1, NROWRT, NACTIV, RT(1,NCOLZ+1), WRK1 )
      CALL ZEROVC( N, P, N, 1 )
      CALL COPYVC( NACTIV, WRK1, NACTIV, 1, P(NCOLZ + 1), NACTIV, 1 )
      CALL ZYPROD( 2, N, NACTIV, NCOLZ, NFREE, NQ, UNITQ,
     *             KACTIV, KFREE, P, ZY, WRK1 )
      CALL AXPY  ( N, ONE, P, N, 1, X, N, 1 )
C
C  ---------------------------------------------------------------------
C  COMPUTE THE 2-NORM OF  X.
C  INITIALIZE  AX  FOR ALL GENERAL CONSTRAINTS.
C  ---------------------------------------------------------------------
  700 XNORM  = V2NORM( N, X, N, 1 )
      IF (NCLIN .EQ. 0) GO TO 800
      CALL ZEROVC( NCLIN, AX, NCLIN, 1 )
      DO 720 J = 1, N
         IF (X(J) .NE. ZERO)
     *   CALL AXPY( NCLIN, X(J), A(1,J), NCLIN, 1, AX, NCLIN, 1 )
  720 CONTINUE
C
C  A POINT THAT SATISFIES THE INITIAL WORKING SET HAS BEEN FOUND.
C
  800 NCOLZ  = NFREE - NACTIV
      NFIXED = N     - NFREE
      IF (MSG .GE. 80) WRITE (NOUT, 1000) NFIXED, NARTIF, NACTIV
      IF (MSG .GE. 80) WRITE (NOUT, 1020) (X(J), J = 1, N)
      RETURN
C
 1000 FORMAT(/ 34H LPCRSH.  WORKING SET SELECTED ...
     *       /  9H BOUNDS =, I5, 4X, 18HTEMPORARY BOUNDS =, I5,
     *     4X, 16HGENERAL LINEAR =, I5)
 1010 FORMAT(/ 29H LP VARIABLES BEFORE CRASH... / (5G12.3))
 1020 FORMAT(/ 29H LP VARIABLES AFTER  CRASH... / (5G12.3))
 1210 FORMAT(/ 32H //LPCRSH//  LCRASH NCLIN NCTOTL
     *       / 11H //LPCRSH//, 3I7 )
C
C  END OF LPCRSH
      END
